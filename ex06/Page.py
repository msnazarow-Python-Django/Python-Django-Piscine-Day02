#!/usr/bin/env python3
from elements import *


class Page:
	def __init__(self, content: Elem):
		self.content = content

	def is_valid(self):
		if isinstance(self.content, (
				Html, Head, Body, Title, Meta, Img, Table, Th, Tr, Td, Ul, Ol, Li, H1, H2, P, Div, Span, Hr, Br, Text)):
			return self.content.is_valid()
		return False

	def __str__(self):
		if isinstance(self.content, Html):
			return Doctype().__str__() + '\n' + self.content.__str__()
		else:
			return self.content.__str__()

	def write_to_file(self, filename):
		try:
			with open(filename, 'w') as file:
				file.write(self.__str__())
		except Exception as e:
			print(e)


def main():
	text = Text("Hello World")
	html = Html()
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	body = Body()
	page = Page(body)
	print(page, page.is_valid(), '', sep='\n')
	head = Head()
	page = Page(head)
	print(page, page.is_valid(), '', sep='\n')
	title = Title()
	head = Head(title)
	page = Page(head)
	print(page, page.is_valid(), '', sep='\n')
	title = Title(text)
	head = Head(title)
	page = Page(head)
	print(page, page.is_valid(), '', sep='\n')
	title = Title(text)
	head = Head(title)
	html = Html(head)
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	title = Title(text)
	head = Head(title)
	html = Html([head, body])
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	table = Table()
	body = Body(table)
	html = Html([head, body])
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	tr = Tr()
	table = Table(tr)
	body = Body(table)
	html = Html([head, body])
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	td = Td()
	tr = Tr(td)
	table = Table(tr)
	body = Body(table)
	html = Html([head, body])
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	td = Td(text)
	tr = Tr(td)
	table = Table(tr)
	body = Body(table)
	html = Html([head, body])
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	td = Td(text)
	th = Th(text)
	tr = Tr([td, th])
	table = Table(tr)
	body = Body(table)
	html = Html([head, body])
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	th = Th(text)
	tr = Tr([th, th])
	table = Table(tr)
	body = Body(table)
	html = Html([head, body])
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	th = Th(text)
	tr = Tr([th, th])
	table = Table(tr)
	ul = Ul()
	body = Body([table, ul])
	html = Html([head, body])
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	th = Th(text)
	tr = Tr([th, th])
	table = Table(tr)
	li = Li(Text('Hello World'))
	ul = Ul(li)
	body = Body([table, ul])
	html = Html([head, body])
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	span = Span()
	body = Body([span])
	html = Html([head, body])
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	span = Span(table)
	body = Body([span])
	html = Html([head, body])
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	p = P()
	span = Span(p)
	body = Body([span])
	html = Html([head, body])
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	p = P()
	span = Span(p)
	body = Body([span])
	html = Html([head, body])
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	p = P(table)
	span = Span(p)
	body = Body([span])
	html = Html([head, body])
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	p = P(text)
	span = Span(p)
	body = Body([span])
	html = Html([head, body])
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	p = P([text, text])
	span = Span([p, p])
	body = Body([span])
	html = Html([head, body])
	page = Page(html)
	print(page, page.is_valid(), '', sep='\n')
	page.write_to_file('Page.html')


if __name__ == '__main__':
	main()
